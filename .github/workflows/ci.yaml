name: CI

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test-on-npm:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [20.x, 22.x, 24.x]
        cli-arg: ['js', 'ts']
        include:
          - cli-arg: js
            flags: '-t javascript'
          - cli-arg: ts
            flags: '-t typescript'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js environment
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}

      - name: Print Node.js version
        run: node -v

      - name: Install beta version  with args ${{ matrix.flags }}
        if: github.ref != 'refs/heads/main'
        shell: bash
        run: |
          npx gen-express-cli@beta test-${{ matrix.cli-arg }} ${{ matrix.flags }}

      - name: Install latest version with args ${{ matrix.flags }}
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: |
          sleep 60
          npx gen-express-cli@latest test-${{ matrix.cli-arg }} ${{ matrix.flags }}

      - name: Start server
        shell: bash
        working-directory: test-${{ matrix.cli-arg }}
        run: npm run dev &

      - name: Wait for server to start
        shell: bash
        run: |
          for i in {1..15}; do
            curl -s http://localhost:8000/health && exit 0
            echo "Waiting for server to start..."
            sleep 1
          done
          echo "Server did not start in time" && exit 1

      - name: Test api
        shell: bash
        working-directory: test-${{ matrix.cli-arg }}
        run: |
          curl -s http://localhost:8000/health | grep -q "success" || exit 1

      - name: Test linter
        shell: bash
        working-directory: test-${{ matrix.cli-arg }}
        run: |
          npm run lint || exit 1
          npm run format:check || exit 1

      - name: Test unit test
        shell: bash
        working-directory: test-${{ matrix.cli-arg }}
        run: |
          npm run test || exit 1
