name: Publish package to NPM

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - '*-beta.*' # ex : v1.0.0-beta.1

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Extract version and tag
        id: version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

          if [[ "$TAG_NAME" == *"-beta"* ]]; then
            echo "DIST_TAG=beta" >> $GITHUB_ENV
          else
            echo "DIST_TAG=latest" >> $GITHUB_ENV
          fi
      - name: Install dependencies
        run: npm install
      - name: Publish package
        run: |
          if [ "$DIST_TAG" = "latest" ]; then
            npm publish
          else
            npm publish --tag $DIST_TAG
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  release:
    runs-on: ubuntu-latest
    needs: publish
    if: ${{ !contains(github.ref , '-beta') }}
    steps:
      - uses: actions/checkout@v4
      - name: Read CHANGELOG
        id: changelog
        run: |
          CONTENT=$(cat CHANGELOG.md)
          echo "CHANGELOG_CONTENT<<EOF" >> $GITHUB_ENV
          echo "$CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Create GitHub Release
        uses: comnoco/create-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: |
            ðŸŽ‰ **New Version Release** ðŸŽ‰

            ${{ env.CHANGELOG_CONTENT }}
          draft: false
          prerelease: false
